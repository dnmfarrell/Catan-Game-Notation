=pod

=encoding utf8

=head1 Settlers Game Notation

This document defines a notation for the game island colonization game Settlers, called "Settlers Game Notation" (SGN). SGN is represented as JSON and is designed to capture "what happened" for a game of Settlers.

=head2 Goal

As far as this author is aware, there is no formal, public and free notation for Settlers. This document aims to establish a common language for recording games of Settlers that can be used to implement Settlers software components like games, clients, servers and AI.

=head2 Status

This is a working draft of the SGN spec, and all feedback is welcome.

=head2 JSON Schema

The F<schema/message.json> file is a draft schema for an SGN message.

=head2 Tests

The F<t> directory has test scripts in Perl and JavaScript. F<test-corpus/messages.json> contains example valid and invalid messages used for testing. The Perl tests can be run from the root project directory with `prove`, which require L<JSON::Schema::AsType|https://metacpan.org/pod/JSON::Schema::AsType> and L<JSON::XS|https://metacpan.org/pod/JSON::XS>:

  $ prove -l
  t/messages.t .. ok
  All tests successful.
  Files=1, Tests=63,  7 wallclock secs ( 0.03 usr  0.01 sys +  1.40 cusr  0.05 csys =  1.49 CPU)
  Result: PASS

If you prefer node.js, you can run the JavaScript tests, which requires L<ajv|https://github.com/epoberezkin/ajv>:

  $ t/messages.js
  ok 1 - load schema
  ok 2 - Build City
  ok 3 - provided tile not intersection
  ok 4 - provided path not intersection
  ok 5 - Build Settlement
  ok 6 - Build Road
  ok 7 - Provided resources instead of path
  ok 8 - Build development card - knight
  ok 9 - Development card type illegal
  ...
  ok 61 - Map Definition: missing harbors
  1..61

=head2 Definition

A valid SGN document a string of newline-separated JSON messages. The idea is to capture the entirety of a game of Settlers from setup to end. The order of messages is always sequential: an SGN document could describe just the game setup for example. But it couldn't describe the deployment phase unless the setup phase is also defined earlier in the same document.

=head2 Messages

Every action in a game of Settlers is described in a message format. A message is a JSON object with the following properties:

  Name    Value
  ------------------------------------------------------------------------------
  aCode   The two letter action code (see Actions below)
  value   The value associated with the action code (see Events below)

=head2 Hexes

All hexes (tiles) are numbered, including sea tiles, using the axial (trapezoidal) coordinate system:

             0,-3  1,-3  2,-3   3,-3
         -1,-2  0,-2  1,-2   2,-2   3,-2
     -2,-1  -1,-1  0,-1   1,-1   2,-1   3,-1
  -3,0   -2,0   -1,0    0,0    1,0    2,0    3,0
     -3,1   -2,1   -1,1   0,1    1,1    2,1
        -3,2   -2,2   -1,2  0,2    1,2
           -3,3   -2,3   -1,3  0,3

This is the same map with the sea tiles represented by tildes (incorrect notation but easier to interpret visually):

           ~~~~  ~~~~  ~~~~   ~~~~
        ~~~~ 0,-2   1,-2   2,-2  ~~~~
     ~~~~  -1,-1  0,-1  1,-1  2,-1  ~~~~
  ~~~~  -2,0   -1,0   0,0   1,0   2,0  ~~~~
     ~~~~  -2,1   -1,1   0,1   1,1  ~~~~
        ~~~~  -2,2   -1,2   0,2  ~~~~
           ~~~~   ~~~~   ~~~~  ~~~~

Hex notation is used to define the layout of the board tiles, and other game objects like the location of the robber.

=head2 Tile Types

A tile can be any one of the below:

  Code Type
  --------------
  H    Hills
  D    Desert
  M    Mountains
  S    Sea
  F    Fields
  FO   Forest
  P    Pastures

=head2 Resource Number

A tile can have one resource number on it, valid numbers are between 2-6 and 8-12. There is also a limit on the frequency of resource numbers. These are all the available resource numbers for a basic game:

  2,3,3,4,4,5,5,6,6,8,8,9,9,10,10,11,11,12

=head2 Tile Notation

A tile is defined by its hex coordinates, type code and resource number. This is a central desert tile:

  {
    tile: [0,0],
    tCode: "D",
    "rNumber": null
  }

=head2 Intersections

Intersections represent a point between 3 hex locations in a clockwise order. Intersections are represented as an array of 3 hex locations. E.g. the six intersections of the center hex:

                 [[0,-1],[0,0],[-1,0]]
                         /   \
  [[0,-1],[0,0],[-1,0]] /     \  [[1,-1],[1,0],[0,0]]
                       |  0,0  |
                       |       |
  [[0,0],[-1,1],[-1,0]] \     /  [[1,0],[0,1],[0,0]]
                         \   /
                 [[0,1],[-1,1],[0,0]]


Intersections are used to define the location of settlements and cities.

=head2 Paths

Paths are lines between contiguous intersections and are represented as an array of intersections. Each path must have at least two intersections:

  [ [[0,0],[-1,1],[-1,0]], [[0,1],[-1,1],[0,0]] ]

Paths are used to define where harbors and roads are placed.

=head2 Harbors

Harbors are placed on paths adjacent to sea tiles. There are 6 harbor types:

  Code  Type
  --------------------
  HR    Generic Harbor
  HRB   Brick Harbor
  HRG   Grain Harbor
  HRL   Lumber Harbor
  HRO   Ore Harbor
  HRW   Wool Harbor

Typical maps will have 4 generic harbors and 1 of every other kind.

=head2 Defining the map

Every tile is listed with its coordinates, type code and resource number. C<null> represents no resource number. Harbors are declared at path locations with the harbor type code. A starter map layout:

  {
    "tiles": [
      {"tile":[0,-3],"tCode":"S","rNumber":null},
      {"tile":[1,-3],"tCode":"S","rNumber":null},
      {"tile":[2,-3],"tCode":"S","rNumber":null},
      {"tile":[3,-3],"tCode":"S","rNumber":null},
      {"tile":[3,-2],"tCode":"S","rNumber":null},
      {"tile":[3,-1],"tCode":"S","rNumber":null},
      {"tile":[3,0],"tCode":"S","rNumber":null},
      {"tile":[2,1],"tCode":"S","rNumber":null},
      {"tile":[1,2],"tCode":"S","rNumber":null},
      {"tile":[0,3],"tCode":"S","rNumber":null},
      {"tile":[-1,3],"tCode":"S","rNumber":null},
      {"tile":[-2,3],"tCode":"S","rNumber":null},
      {"tile":[-3,3],"tCode":"S","rNumber":null},
      {"tile":[-3,2],"tCode":"S","rNumber":null},
      {"tile":[-3,1],"tCode":"S","rNumber":null},
      {"tile":[-3,0],"tCode":"S","rNumber":null},
      {"tile":[-2,-1],"tCode":"S","rNumber":null},
      {"tile":[-1,-2],"tCode":"S","rNumber":null},
      {"tile":[1,-2],"tCode":"P","rNumber":12},
      {"tile":[2,-2],"tCode":"F","rNumber":9},
      {"tile":[2,-1],"tCode":"P","rNumber":10},
      {"tile":[2,0],"tCode":"F","rNumber":8},
      {"tile":[1,1],"tCode":"M","rNumber":3},
      {"tile":[0,2],"tCode":"FO","rNumber":6},
      {"tile":[-1,2],"tCode":"F","rNumber":2},
      {"tile":[-2,2],"tCode":"M","rNumber":5},
      {"tile":[-2,1],"tCode":"H","rNumber":8},
      {"tile":[-2,0],"tCode":"D","rNumber":null},
      {"tile":[-1,-1],"tCode":"H","rNumber":4},
      {"tile":[0,-1],"tCode":"M","rNumber":6},
      {"tile":[1,-1],"tCode":"H","rNumber":5},
      {"tile":[1,0],"tCode":"FO","rNumber":4},
      {"tile":[0,1],"tCode":"P","rNumber":9},
      {"tile":[-1,1],"tCode":"P","rNumber":10},
      {"tile":[-1,0],"tCode":"FO","rNumber":3},
      {"tile":[0,0],"tCode":"F","rNumber":11}
    ],
    "harbors": [
      {"path":[[[0,-3],[0,-2],[-1,-2]],  [[1,-3],[0,-2],[0,-3]]],   "hCode": "HR"},
      {"path":[[[2,-3],[1,-2],[1,-3]],   [[2,-3],[2,-2],[1,-2]]],   "hCode": "HRW"},
      {"path":[[[3,-2],[2,-1],[2,-2]],   [[3,-2],[3,-1],[2,-1]]],   "hCode": "HR"},
      {"path":[[[3,-1],[3,0],[2,0]],     [[3,0],[2,1],[2,0]]],      "hCode": "HR"},
      {"path":[[[2,1],[1,2],[1,1]],      [[1,1],[1,2],[0,2]]],      "hCode": "HRB"},
      {"path":[[[0,2],[-1,3],[-1,2]],    [[-1,2],[-1,3],[-2,3]]],   "hCode": "HRL"},
      {"path":[[[-2,2],[-2,3],[-3,3]],   [[-2,2],[-3,3],[-3,2]]],   "hCode": "HR"},
      {"path":[[[-2,1],[-3,2],[-3,1]],   [[-2,0],[-2,1],[-3,1]]],   "hCode": "HRG"},
      {"path":[[[-1,-1],[-2,0],[-2,-1]], [[-1,-2],[-1,-1],[-2,-1]]],"hCode": "HRO"}
    ]
  }

=head2 Resources

There are 5 types of resources:

  Code  Type
  ------------
  B     Brick
  G     Grain
  L     Lumber
  O     Ore
  W     Wool

=head2 Resources notation

Resources notation records which resources and in what quantity are being traded by players with the bank or with each other.

It uses the resource code as the key and the value as the quantity. Both quantities gained and lost are listed. So a trade between player 1 and player 2 for 2 lumber for a wool looks like:

  [
    {"player":"1", resources:{"L":-2,"W": 1},
    {"player":"2", resources:{"L": 2,"W":-1}
  ]

The implication of this notation is that all resources must balance. For trades with the bank, C<B> represents the bank. Here is a bank trade by player 2, losing 4 grain to get a brick:

  [
    {"player":"2", resources:{"G":-4,"B": 1},
    {"player":"B", resources:{"G": 4,"B":-1}
  ]

=head2 Assets

Players may accumulate these throughout the game. There are four normal and two special types:

  Name              How to get it
  ---------------------------------------------------
  Development card  Build development card action (BD)
  Settlement        Build settlement action (BS)
  City              Build city action (BC)
  Road              Build road action (BR)
  Largest army      Largest Army - gained by playing at least 3 knight cards, and more than any other player
  Longest road      Longest Road - gained by building at least 5 connected roads, and more than any other player

There are 5 types of development cards:

  cCode  Name
  --------------------
  KN     Knight
  MO     Monopoly
  RB     Road building
  VP     Victory Point
  YP     Year of plenty

=head2 Actions

Actions are taken by players. Every entry in SGN is an action, consisting of an action code and a JSON object:

  aCode Name                    Value
  --------------------------------------------------------------------------------------
  BC    Build City              {"player":"#","intersection":<intersection coordinates>}
  BD    Build Development card  {"player":"#",cCode": "KN|MO|RB|VP|YP"}
  BR    Build Road              {"player":"#",path":<path coordinates>}
  BS    Build Settlement        {"player":"#",intersection":<intersection coordinates>}
  DM    Define Map              {"tiles":[...], "harbors":[...]}
  MR    Move Robber             {"tile": <tile coordinates>}
  PD    Play Development card   {"cCode": "KN|MO|RB|VP|YP"}
  RD    Roll Dice               {"result":#}
  ST    Steal                   {"resources":<resource notation>}
  TR    Trade                   {"resources":<resource notation>}

=head2 Trading

Trading is a big part of Settlers. Players may trade with each other or with the Bank.

Bank trades are described using the trade action. For example, here's a trade between the Bank ("B") and player 2:

  {
    "aCode": "TR",
    "value":[{"player":"B","resources":{"B":"-1","O":"4"}},{"player":"2","resources":{"B":"1","O":"-4"}}]
    }
  }

Here is an example trade between player 1 and player 2:

  {
    "aCode":"TO",
    "value": {"resources":[{"player":"1","B":-2,"W":1},{"player":"2","B":2,"W":-1}]},
  },

The exchange begins with a Trade offer from player 1 for 1 wool in exchange for 2 brick to player 2. Player 2 accepts the offer, and this triggers the Trade action.

=head2 Players

Players are just string identifiers that refer to a player of the game or the banker. Player "1" is always the player that goes first, up until player "6" (the maximum number of players).

One player name is special and reserved: C<"B"> refers to the banker.

=head1 FAQ

=over 4

=item * I<Is SGN case-sensitive?> YES!

=back

=head2 See Also

L<Pioneers|http://pio.sourceforge.net/> an open source implementation of the island colonization game.

L<Catan|http://playcatan.com> the official website for Settlers of Catan.

=head2 Version

0.04

=head2 Changes

=head3 0.04 2016-10-06

Events are now called Actions. The idea is to strip out anything that can be inferred and only record what is left. Server type attributes like "UUID" are not required. In some cases, it was necessary to add a C<player> property to some actions, to avoid ambiguity when playing an expanded game of Settlers and there is an extra build phase per player turn.

=head3 0.03 2015-12-24

Messages can include a batch value. Added the trade decline event. Changed the definition of tiles and harbors to be objects rather than arrays. Resource notation is now an array of objects that include a player property. Removed C<player> from every event value, except for Player Add (it was redundant). Types of things are identified by new names: C<tCodes> for tile codes, C<hCodes> for harbor codes and C<cCodes> for development card codes. Added new C<VI> event type. Defined SGN schemas for log and messages.

=head3 0.02 2015-11-25

Ports are declared on paths instead of tiles. SGN messages have event code, value, sender and UUID attributes.

=head3 0.01 2015-11-20

Initial release

=head2 Author

David Farrell, E<copy> 2015.

=head2 License

FreeBSD, see LICENSE

=cut
